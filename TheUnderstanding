Kubernetes: 
Kubernetes is an open-source container-orchestration system for automating deployment, scaling, and management of containerized applications.

Architecture: 
A working Kubernetes deployment is called a cluster. Kubernetes cluster has two parts: the master/control plane and the compute/worker nodes.
- The control plane's components make global decisions about the cluster (for example, scheduling), as well as detecting and responding to cluster events. 
  It manages the worker nodes and the Pods in the cluster.
- The worker node is Physical or Virtual machine where application container pods are deployed.
  
There are different services running on both Control plane and worker nodes. 
 - Control Plane: 
   - Kube-APIServer, which acts as the frontend to the cluster. All internal and external communication to the cluster is via the API-Server. 
     The users, management devices, and command line interfaces all talk to this API server to interact with the Kubernetes cluster.
     It is designed to scale horizontally. 
     
   - Kube-Controller-Manager, which runs a set of controllers for the running cluster. The controller-manager implements governance across the cluster.
     List of controllers:
     - Node Controller: Responsible for noticing and responding when nodes go down.
     - Replication Controller: Responsible for maintaining the correct number of pods for every replication controller object in the system.
     - Endpoints Controller: Populates the Endpoints object (that is, it joins Services and Pods).
     - Service Account and Token Controllers: Create default accounts and API access tokens for new namespaces.
     - Cloud-Controller-Manager
 
   - Etcd, the cluster state database.
    
   - Kube Scheduler, which schedules activities to the worker nodes based on events occurring on the etcd. It also holds the nodes resources plan to determine the proper action for the triggered event. For example the scheduler would figure out which worker node will host a newly scheduled POD.

